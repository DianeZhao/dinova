<?xml version="1.0"?>
<launch>
    <!-- Dingo params: Dont change! -->
    <arg name="motor_params" default="$(optenv DINGO_MOTOR_PARAMS base)" />
    <arg name="config" default="$(optenv DINGO_CONFIG base)" />

    <!-- dingo_real_urdf => There is a difference between urdf file for real dingo and the one in gazebo/control (wheel vs [x,y,theta]).
                        For Gazebo set it to false -->
    <arg name="dingo_real_urdf" default="true" />
    <arg name="load_gripper" default="true" />

    <!-- Vicon -->
    <arg name="vicon" default="true" /> <!-- Change -->
    <arg name="object" default="mug1"/>
    <arg name="object_names" default="[$(env ROBOT_NAME), $(arg object)]"/> <!-- Change -->
    <arg name="object_msg_types" default="[geometry_msgs/PoseStamped, geometry_msgs/PoseStamped]"/>
    <arg name="object_frame_ids" default="[map, map]"/>
    <arg name="object_publish_topics" default="[/vicon/$(env ROBOT_NAME), /vicon/$(arg object)]"/>
    <arg name="object_frequency_divider" default="[2, 10]"/>
    <param name="/vicon/use_vicon" type="bool" value="$(arg vicon)" />
    <param name="/vicon/dingo_topic" type="string" value="/vicon/$(env ROBOT_NAME)" />

    <!-- Robot model -->
    <param name="robot_description" command="$(find xacro)/xacro '$(find dinova_description)/urdf/dinova.xacro'
                                            dingo_real_urdf:=$(arg dingo_real_urdf)
                                            load_gripper:=$(arg load_gripper)"/>
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" >
        <remap from="/joint_states" to="/dinova/joint_states" />
    </node>

    <!-- DINGO Nodes -->
    <node pkg="rosserial_python" type="message_info_service.py" name="rosserial_message_info" />

    <node pkg="dingo_base" type="dingo_node" name="dingo_node" output="screen">
        <param name="dingo_omni" type="bool" value="$(optenv DINGO_OMNI 0)" />
        <rosparam command="load" file="$(find dingo_base)/config/$(arg motor_params).yaml" />
        <param name="wireless_interface" value="$(optenv DINGO_WIRELESS_INTERFACE wlp2s0)" />
    </node>

    <node pkg="imu_filter_madgwick" type="imu_filter_node" name="imu_filter">
        <rosparam file="$(eval optenv('DINGO_MAG_CONFIG', find('dingo_base')+'/config/mag_config_default.yaml'))" />
        <rosparam>
        gain: 0.1
        zeta: 0.001
        publish_tf: false
        use_magnetic_field_msg: true
        </rosparam>
    </node>

    <!-- Differential controller and basic localization -->
    <include file="$(find dingo_control)/launch/control.launch" />

    <!-- Teleoperation via joystick and rviz interactive markers -->
    <include file="$(find dingo_control)/launch/teleop.launch" />

    <!-- Diagnostic Aggregator for robot monitor usage -->
    <group if="$(optenv DINGO_OMNI 0)">
        <node pkg="diagnostic_aggregator" type="aggregator_node" name="diagnostic_aggregator">
        <rosparam command="load" file="$(find dingo_base)/config/diagnostic_analyzers_common.yaml" />
        <rosparam command="load" file="$(find dingo_base)/config/diagnostic_analyzers_omni.yaml" />
        </node>
    </group>
    <group unless="$(optenv DINGO_OMNI 0)">
        <node pkg="diagnostic_aggregator" type="aggregator_node" name="diagnostic_aggregator">
        <rosparam command="load" file="$(find dingo_base)/config/diagnostic_analyzers_common.yaml" />
        <rosparam command="load" file="$(find dingo_base)/config/diagnostic_analyzers_diff.yaml" />
        </node>
    </group>

    <!-- Kinova Nodes -->
    <rosparam command="load" file="$(find dinova_control)/config/config.yaml" />
    <node name="dinova_control" pkg="dinova_control" type="kinova_driver.py" args="" output="screen"/>
    <node name="dinova_state_publisher" pkg="dinova_control" type="dinova_state_publisher.py" args="" output="screen"/>

    <!-- Vicon nodes -->
    <group if="$(arg vicon)">
        <include file="$(find dinova_bringup)/launch/vicon.launch">
            <arg name="object_names"                    value="$(arg object_names)"/>
            <arg name="object_msg_types"                value="$(arg object_msg_types)"/>
            <arg name="object_frame_ids"                value="$(arg object_frame_ids)"/>
            <arg name="object_publish_topics"           value="$(arg object_publish_topics)"/>
            <arg name="object_frequency_divider"        value="$(arg object_frequency_divider)"/>
        </include>
        <node pkg="tf" type="static_transform_publisher" name="$(env ROBOT_NAME)_static_tf" args="0 0 0 0 0 0 $(env ROBOT_NAME) base_link 0.1" />
    
    </group>
    


</launch>
